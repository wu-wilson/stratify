@use "sass:map";
@use "sass:color";
@use "sass:list";
@use "variables" as vars;

@mixin themed {
  @each $theme, $props in vars.$themes {
    :global(.#{$theme}-mode) & {
      @content ($props);
    }
  }
}

@mixin grid-bg {
  background-size: 3rem 3rem;
  background-position: center;

  @include themed using ($props) {
    $grid-lines: map.get($props, "grid-lines");
    $page-bg: map.get($props, "page-bg");

    background-color: $page-bg;
    background-image: linear-gradient($grid-lines 1px, transparent 1px),
      linear-gradient(90deg, $grid-lines 1px, transparent 1px);
  }
}

@mixin respond($breakpoint) {
  $size: map.get(vars.$breakpoints, $breakpoint);

  @if $size == null {
    @error "Breakpoint `#{$breakpoint}` not found in \$breakpoints map.";
  }

  @media (max-width: $size) {
    @content;
  }
}

@mixin card(
  $width: auto,
  $height: auto,
  $padding: 1rem,
  $border-radius: 10px,
  $show-border: true
) {
  width: $width;
  height: $height;
  padding: $padding;
  border-radius: $border-radius;

  @include themed using ($props) {
    background-color: map.get($props, "card-bg");
    @if $show-border {
      border: map.get($props, "card-border");
    } @else {
      border: none;
    }
  }
}

@mixin button(
  $width: auto,
  $height: auto,
  $padding: 0.5rem 1rem,
  $border-radius: 30px
) {
  width: $width;
  height: $height;
  padding: $padding;
  border-radius: $border-radius;

  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  cursor: pointer;

  @include themed using ($props) {
    background-color: map.get($props, "btn-bg");
    color: map.get($props, "font-color");
  }

  &:hover {
    @include themed using ($props) {
      background-color: color.adjust(
        map.get($props, "btn-bg"),
        $lightness: -8%
      );
    }
  }
}

@mixin transition($properties, $duration: 0.2s, $timing: ease) {
  transition: #{list.join($properties, ", ")} #{$duration} #{$timing};
}
